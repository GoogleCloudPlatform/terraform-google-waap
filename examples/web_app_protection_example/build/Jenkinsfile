pipeline {
    agent any

    environment {
        _BUILD_ID="${env.BUILD_ID}"
        _BRANCH_NAME="${env.BRANCH_NAME}"

        _TF_SA_EMAIL="<_TF_SA_EMAIL>"
        _STATE_BUCKET_NAME="<_STATE_BUCKET_NAME>"
        _PROJECT_ID="<_PROJECT_ID>"
        _POLICY_REPO="CLOUDSOURCE"


        EXAMPLE_BUILD="web_app_protection_example"
        _GCLOUD_PATH="/var/lib/jenkins/google-cloud-sdk/bin"
    }

    stages{
        stage("Terraform Setup"){
            steps{
                sh '''
                echo "Setting up gcloud for impersonation"
                ${_GCLOUD_PATH}/gcloud config set auth/impersonate_service_account ${_TF_SA_EMAIL}
                echo "Adding bucket information to backends"
                for i in `find -name 'backend.tf'`; do sed -r -i "s/_BUCKET_GCS_/${_STATE_BUCKET_NAME}/" $i; done
                for i in `find -name 'pipeline-functions.sh'`;do chmod +x $i; done
                cd ${WORKSPACE}/examples/${EXAMPLE_BUILD} ; cp -Prf ../../modules .
                for i in `find environments/ -mindepth 1 -maxdepth 1 -type d` ; do cp -Prf *.tf ./scripts/ $i ; done
                '''
            }
        }
        stage('TF init') {
            when {
              anyOf {
                  branch 'dev'
                  branch 'prd'
                  branch 'npd'
              }
            }
            steps {
                sh '''
                export GOOGLE_IMPERSONATE_SERVICE_ACCOUNT=${_TF_SA_EMAIL}
                cd ${WORKSPACE}/examples/${EXAMPLE_BUILD}
                build/pipeline-functions.sh init $BRANCH_NAME
                '''
            }
        }
        stage('TF Plan ALL') {
            when {
                not {
                    anyOf {
                        branch 'dev'
                        branch 'prd'
                        branch 'npd'
                    }
                }
            }
            steps {
                sh '''
                export GOOGLE_IMPERSONATE_SERVICE_ACCOUNT=${_TF_SA_EMAIL}
                cd ${WORKSPACE}/examples/${EXAMPLE_BUILD}
                build/pipeline-functions.sh plan_validate_all $BRANCH_NAME
                '''
                }
            }
        stage('TF plan') {
            when {
                anyOf {
                      branch 'dev'
                      branch 'prd'
                      branch 'npd'
                    }
                }
            steps {
                sh '''
                export GOOGLE_IMPERSONATE_SERVICE_ACCOUNT=${_TF_SA_EMAIL}
                cd ${WORKSPACE}/examples/${EXAMPLE_BUILD}
                build/pipeline-functions.sh plan $BRANCH_NAME
                '''
            }
        }
        stage('TF apply') {
            when {
              anyOf {
                  branch 'dev'
                  branch 'prd'
                  branch 'npd'
                }
            }
            steps {
                sh '''
                export GOOGLE_IMPERSONATE_SERVICE_ACCOUNT=${_TF_SA_EMAIL}
                cd ${WORKSPACE}/examples/${EXAMPLE_BUILD}
                build/pipeline-functions.sh apply $BRANCH_NAME
                '''
            }
        }
    }
    post{
        cleanup{
            cleanWs()
        }
    }
}
